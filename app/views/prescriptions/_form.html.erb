<%= form_with(model: prescription, local: true) do |form| %>
  <% if prescription.errors.any? %>
    <div class="form-errors">
      <h2><%= prescription.errors.count %> 件のエラーにより保存できませんでした:</h2>
      <ul>
        <% prescription.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- ユーザー番号 -->
  <div>
    <%= form.label :patient_number, "ユーザー番号" %><br>
    <%= form.text_field :patient_number,
          value: prescription.patient&.patient_number,
          placeholder: "患者番号を入力してください",
          id: "patient_number" %>
  </div>

  <!-- 患者名 -->
  <div>
    <%= form.label :patient_name, "患者名" %><br>
    <%= form.text_field :patient_name,
          value: prescription.patient_name,
          placeholder: "患者名を入力してください",
          id: "patient_name" %>
  </div>

  <!-- DB保存用 patient_id -->
  <%= form.hidden_field :patient_id, id: "patient_id" %>

  <!-- 病院名 -->
  <div>
    <%= form.label :hospital_name, "病院名" %><br>
    <%= text_field_tag :hospital_name, current_user.hospital_name, readonly: true %>
    <%= form.hidden_field :hospital_name, value: current_user.hospital_name %>
  </div>

  <!-- 医師 -->
  <div>
    <%= form.label :doctor_id, "医師" %><br>
    <%= text_field_tag :doctor_name, current_user.name, readonly: true %>
    <%= form.hidden_field :doctor_id, value: current_user.id %>
  </div>

  <!-- 処方薬 -->
  <h3>処方薬</h3>
  <table id="prescription-items-table">
    <thead>
      <tr>
        <th>薬</th>
        <th>日数</th>
        <th>操作</th>
      </tr>
    </thead>
    <tbody>
      <%= form.fields_for :prescription_items do |pm_form| %>
        <tr class="prescription-item">
          <td>
            <%= pm_form.collection_select :medication_id, Medication.all, :id, :name,
                prompt: "薬を選択", class: "form-control" %>
          </td>
          <td>
            <%= pm_form.number_field :days, min: 1, class: "form-control text-center" %>
          </td>
          <td class="action-col">
            <%= link_to "削除", "#", class: "remove-item" %>
            <%= pm_form.hidden_field :_destroy, class: "destroy-flag" %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>

  <!-- 追加ボタン -->
  <button type="button" id="add-prescription-item" class="btn btn-secondary">＋処方薬を追加</button>

  <!-- 発行日 -->
  <div class="form-group">
    <%= form.label :issued_at, "発行日" %><br>
    <%= form.date_field :issued_at, value: (prescription.issued_at || Date.today), id: "issued_at_date" %>
  </div>

  <!-- 有効期限 -->
  <div class="form-group">
    <%= form.label :expires_at, "有効期限" %><br>
    <%= form.date_field :expires_at, value: (prescription.expires_at || Date.today + 4), id: "expires_at_date" %>
  </div>

  <!-- QRトークン -->
  <div class="form-group">
    <%= form.label :qr_token, "QRトークン" %><br>
    <%= form.text_field :qr_token, value: prescription.qr_token || SecureRandom.uuid %>
  </div>

  <hr>

  <div>
    <%= form.submit "登録する", class: "btn btn-primary" %>
  </div>
<% end %>

<!-- 薬データをJS用に埋め込み -->
<script>
  window.medications = <%= Medication.all.map { |m| {id: m.id, name: m.name} }.to_json.html_safe %>;
</script>

<script>
  let prescriptionFormInitialized = false;

  function initPrescriptionForm() {
    if (prescriptionFormInitialized) return;
    prescriptionFormInitialized = true;

    const tableBody   = document.querySelector("#prescription-items-table tbody");
    const addButton   = document.getElementById("add-prescription-item");
    const numberInput = document.getElementById("patient_number");
    const nameInput   = document.getElementById("patient_name");
    const idInput     = document.getElementById("patient_id");
    const medications = window.medications || [];

    // --- 処方薬追加 ---
    if (addButton && tableBody) {
      addButton.addEventListener("click", () => {
        const timestamp = new Date().getTime();
        const options = medications.map(m => `<option value="${m.id}">${m.name}</option>`).join("");

        const newRow = `
          <tr class="prescription-item">
            <td>
              <select name="prescription[prescription_items_attributes][${timestamp}][medication_id]"
                      class="form-control" required>
                <option value="">薬を選択</option>${options}
              </select>
            </td>
            <td>
              <input type="number" name="prescription[prescription_items_attributes][${timestamp}][days]"
                     min="1" class="form-control text-center" required>
            </td>
            <td class="action-col">
              <a href="#" class="remove-item">削除</a>
              <input type="hidden" class="destroy-flag"
                     name="prescription[prescription_items_attributes][${timestamp}][_destroy]" value="false">
            </td>
          </tr>
        `;
        tableBody.insertAdjacentHTML("beforeend", newRow);
      });

      // --- 削除（委譲方式）---
      tableBody.addEventListener("click", (e) => {
        if (e.target.classList.contains("remove-item")) {
          e.preventDefault();
          const row = e.target.closest(".prescription-item");
          if (row) {
            row.querySelector(".destroy-flag").value = "1";
            row.style.display = "none";
          }
        }
      });
    }

    // --- ユーザー番号 → 患者名 自動補完 ---
    if (numberInput && nameInput && idInput) {
      numberInput.addEventListener("blur", () => {
        const num = numberInput.value.trim();
        if (num === "") return;

        fetch(`/patients/find_by_number?number=${num}`)
          .then((res) => res.json())
          .then((data) => {
            if (data.error) {
              nameInput.value = "";
              idInput.value   = "";
              alert(data.error);
            } else {
              nameInput.value = data.name;
              idInput.value   = data.id;
            }
          })
          .catch((err) => console.error("通信エラー:", err));
      });
    }

    // --- 発行日 → 有効期限 自動補完 ---
    const issuedDateInput = document.getElementById("issued_at_date");
    const expiresDateInput = document.getElementById("expires_at_date");

    if (issuedDateInput && expiresDateInput) {
      issuedDateInput.addEventListener("change", function() {
        if (issuedDateInput.value) {
          let issuedDate = new Date(issuedDateInput.value);
          let expiresDate = new Date(issuedDate);
          expiresDate.setDate(expiresDate.getDate() + 4);
          expiresDateInput.value = expiresDate.toISOString().slice(0, 10);
        }
      });
    }
  }

  document.addEventListener("turbo:load", initPrescriptionForm);
  document.addEventListener("turbo:render", initPrescriptionForm);
</script>





























